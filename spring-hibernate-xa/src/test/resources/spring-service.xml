<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- <bean id="setMyAtomikosSystemProps" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		<property name="targetObject"> <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		<property name="targetClass" value="java.lang.System" /> <property name="targetMethod" 
		value="getProperties" /> </bean> </property> <property name="targetMethod" 
		value="putAll" /> <property name="arguments"> <util:properties> <prop key="com.atomikos.icatch.file">classpath:jta.properties</prop> 
		<prop key="com.atomikos.icatch.hide_init_file_path">true</prop> </util:properties> 
		</property> </bean> -->
	<bean id="dataSource1" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName">
			<value>mysql/dataSource1</value>
		</property>

		<property name="xaDataSourceClassName">
			<value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
		</property>

		<property name="xaProperties">
			<props>
				<prop key="user">root</prop>
				<prop key="password">test</prop>
				<prop key="URL">
					jdbc:mysql://localhost:3306/etl_test?useUnicode=true&amp;characterEncoding=utf8&amp;pinGlobalTxToPhysicalConnection=true
				</prop>
			</props>
		</property>
		<property name="poolSize" value="3" />
		<property name="testQuery">
			<value>SELECT 1</value>
		</property>
	</bean>
	<bean id="dataSource2" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName">
			<value>mysql/dataSource2</value>
		</property>

		<property name="xaDataSourceClassName">
			<value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
		</property>

		<property name="xaProperties">
			<props>
				<prop key="user">root</prop>
				<prop key="password">test</prop>
				<prop key="URL">
					jdbc:mysql://localhost:3306/etl?useUnicode=true&amp;characterEncoding=utf8&amp;pinGlobalTxToPhysicalConnection=true
				</prop>
			</props>
		</property>
		<property name="poolSize" value="3" />
		<property name="testQuery">
			<value>SELECT 1</value>
		</property>
	</bean>

	<bean id="sessionFactory1"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource1" />
		<property name="hibernateProperties">
			<value>
				hibernate.c3p0.min_size=5
				hibernate.c3p0.max_size=20
				hibernate.c3p0.timeout=1800
				hibernate.c3p0.max_statements=50
				hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
				hibernate.show_sql = true
				hibernate.default_schema = etl
				hibernate.max_fetch_depth = 3
				hibernate.default_batch_fetch_size = 8
				hibernate.id.new_generator_mappings = true
				hibernate.hbm2ddl.auto=update
				hibernate.current_session_context_class = jta
				hibernate.transaction.factory_class=com.atomikos.icatch.jta.hibernate3.AtomikosJTATransactionFactory
				hibernate.transaction.manager_lookup_class=com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup
				hibernate.format_sql=true

			</value>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="pre-insert" value-ref="entityHasTimeStampListener">
				</entry>
			</map>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.github.wowcinder.examples.entity.Test1</value>
				<value>com.github.wowcinder.examples.entity.DynamicUpdateEntity
				</value>
			</list>
		</property>

	</bean>

	<bean id="entityHasTimeStampListener"
		class="com.github.wowcinder.examples.entity.listener.EntityHasTimeStampListener"></bean>

	<bean id="sessionFactory2"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource2" />
		<property name="hibernateProperties">
			<value>
				hibernate.c3p0.min_size=5
				hibernate.c3p0.max_size=20
				hibernate.c3p0.timeout=1800
				hibernate.c3p0.max_statements=50
				hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
				hibernate.show_sql = true
				hibernate.default_schema = etl_test
				hibernate.max_fetch_depth = 3
				hibernate.default_batch_fetch_size = 8
				hibernate.id.new_generator_mappings = true
				hibernate.hbm2ddl.auto=update
				hibernate.current_session_context_class = jta
				hibernate.transaction.factory_class=com.atomikos.icatch.jta.hibernate3.AtomikosJTATransactionFactory
				hibernate.transaction.manager_lookup_class=com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup
				hibernate.format_sql=true
			</value>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="pre-insert">
					<list>
						<ref bean="entityHasTimeStampListener" />
						<ref bean="passwordPersistencePreInsertListener" />
					</list>
				</entry>
				
				<entry key="pre-update">
					<list>
						<ref bean="passwordPersistencePreUpdateListener" />
					</list>
				</entry>
				
				<entry key="post-insert">
					<list>
						<ref bean="passwordPersistencePostInsertOrUpdate" />
					</list>
				</entry>
				
				<entry key="post-update">
					<list>
						<ref bean="passwordPersistencePostInsertOrUpdate" />
					</list>
				</entry>
			</map>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.github.wowcinder.examples.entity.Test2</value>
				<value>com.github.wowcinder.examples.entity.User</value>
			</list>
		</property>

	</bean>


	<bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
		init-method="init" destroy-method="shutdownForce">
		<constructor-arg>
			<!-- IMPORTANT: specify all Atomikos properties here -->
			<props>
				<prop key="com.atomikos.icatch.service">
					com.atomikos.icatch.standalone.UserTransactionServiceFactory
				</prop>
			</props>
		</constructor-arg>
	</bean>

	<bean id="AtomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close" depends-on="userTransactionService">
		<property name="startupTransactionService" value="false" />
		<property name="forceShutdown" value="true" />
	</bean>

	<bean id="AtomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"
		depends-on="userTransactionService">
		<property name="transactionTimeout" value="300" />
	</bean>

	<bean id="JtaTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager"
		depends-on="userTransactionService">
		<property name="transactionManager" ref="AtomikosTransactionManager" />
		<property name="userTransaction" ref="AtomikosUserTransaction" />
	</bean>

	<context:annotation-config />
	<context:component-scan base-package="com.github.wowcinder.examples" />
	<tx:annotation-driven transaction-manager="JtaTransactionManager" />
</beans>
